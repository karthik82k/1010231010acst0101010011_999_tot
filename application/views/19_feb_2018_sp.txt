alter table PartyAddress add VenderCode int

USE [Total]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetInvoiceTran]    Script Date: 02/19/2018 21:23:20 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO



ALTER procedure [dbo].[usp_GetInvoiceTran] (
	@COMPANY_ID	int = NULL
	,@FINANCIALYEAR_ID tinyint = NULL
	,@PREFIX NVARCHAR(20) = NULL
	,@VOUCHER_ID INT = NULL
	,@ISSALES BIT = NULL
	,@ISACTIVE BIT =NULL
    )
    As
    /*Created BY - Sinish on 2017/11/28 
	0= all states else one state*/
Begin
SELECT 
	 I.[VOUCHER_ID]
	,I.[COMPANY_ID]
	,I.[DATE]
	,I.[ISSALES]
	,I.[FINANCIALYEAR_ID]
	,I.[ACCOUNT_ID]
	,A.ACCOUNTDESC AS [ACCOUNT]
	,I.[LEDGER_ID]
	,L.ACCOUNTDESC AS [LEDGER]
	,I.[PREFIX]
	,I.PURCHASEORDER_PREFIX
	,I.[PURCHASEORDER_ID]
	,I.[ITEM_ID]
	,IT.[NAME] AS [ITEM]
	,I.[QUANTITY]
	,I.[RATE]
	,I.[UNIT_ID]
	,U.[NAME] AS [UNIT]
	,I.[AMOUNT]
	,I.[DISCOUNT]
	,I.[CGSTPERCENT]
	,I.[SGSTPERCENT]
	,I.[IGSTPERCENT]
	,I.[VATPERCENT]
	,I.[CGSTAMOUNT]
	,I.[SGSTAMOUNT]
	,I.[IGSTAMOUNT]
	,I.[VATAMOUNT]
	,I.[CREDITPERIOD]
	,I.[CREATEDON]
	,I.[CREATEDBY]
	,IT.[STOCK]
	,I.REFNUM
	,I.shipping_partyAddress_ID
	,REPLICATE('0',6-LEN(RTRIM(I.VOUCHER_ID))) + RTRIM(I.VOUCHER_ID) as V_ID
	,IT.HSNCODE
	,A.TINNO			
	,A.REVERSE_CHARGES_APPLICABLE
	,A.MAINTAIN_BILLWISE_DETAILS
	,I.MODEOFTRANSPORT
	,I.DATEOFSUPPLY
	,I.VEHICLEREGNO
	,case when (select top 1 count(1) from Printeddata with (nolock) 
				where COMPANY_ID=i.COMPANY_ID and FINANCIALYEAR_ID=i.FINANCIALYEAR_ID and PREFIX=i.PREFIX and VOUCHER_ID=i.VOUCHER_ID and VoucherType in('SA','PU'))>0 then 1 else 0 
	 END as Printed

 FROM InvoiceTran I with (nolock) 
		JOIN Account A  with (nolock) ON I.ACCOUNT_ID=A.ID
		JOIN ACCOUNT L  with (nolock) ON I.LEDGER_ID=L.ID
		JOIN Item It  with (nolock) ON I.ITEM_ID=It.ID
		JOIN Unit U  with (nolock) ON I.UNIT_ID=U.ID
  WHERE I.COMPANY_ID=ISNULL(@COMPANY_ID,I.COMPANY_ID) 
	 AND I.[FINANCIALYEAR_ID]=ISNULL(@FINANCIALYEAR_ID,I.FINANCIALYEAR_ID)
	 AND I.[PREFIX] = ISNULL(@PREFIX,I.PREFIX)
	 AND I.[VOUCHER_ID]=ISNULL(@VOUCHER_ID,I.VOUCHER_ID)
	 AND I.[ISACTIVE]=ISNULL(@ISACTIVE,I.ISACTIVE)
	 AND I.[ISSALES]=ISNULL(@ISSALES,I.ISSALES)
ORDER BY I.ID
End


USE [Total]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetPartyAddress]    Script Date: 02/19/2018 18:35:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER procedure [dbo].[usp_GetPartyAddress](
	 @COMPANY_ID int = NULL
	,@ACCOUNT_ID int = NULL
	,@DISTRICT_ID int = NULL
	,@STATE_ID int = NULL
	,@COUNTRY_ID int = NULL
	,@ISBILLING bit = NULL
	,@ID int = NULL
	)
AS
Begin
	select 
		 PA.ID AS PartyAddress_ID
		,PA.[COMPANY_ID]
		,PA.[ACCOUNT_ID]
		,A.ACCOUNTDESC AS ACCOUNT
		,PA.[ADDRESS1]
		,PA.[ADDRESS2]
		,PA.[PINCODE]
		,PA.[DISTRICT_ID]
		,D.NAME AS DISTRICT
		,PA.[STATE_ID]
		,S.NAME AS [STATE]
		,PA.[COUNTRY_ID]
		,C.NAME AS COUNTRY
		,PA.[ISBILLING]
		,PA.[CREATEDBY]
		,PA.[CREATEDON]
		,PA.[MODIFIEDBY]
		,PA.[MODIFIEDON]
		,PA.[ISACTIVE]
	from 
		PartyAddress PA with (nolock)
		INNER JOIN Account A WITH(NOLOCK) ON PA.ACCOUNT_ID=A.ID
		INNER JOIN District D WITH(NOLOCK) ON PA.DISTRICT_ID=D.ID
		INNER JOIN State S WITH(NOLOCK) ON PA.STATE_ID=S.ID
		INNER JOIN COUNTRY C WITH(NOLOCK) ON PA.COUNTRY_ID=C.ID
	where 
		PA.COMPANY_ID =isnull(@COMPANY_ID,PA.COMPANY_ID)
		AND PA.ACCOUNT_ID=ISNULL(@ACCOUNT_ID,PA.ACCOUNT_ID)
		AND PA.DISTRICT_ID=ISNULL(@DISTRICT_ID,PA.DISTRICT_ID)
		AND PA.STATE_ID=ISNULL(@STATE_ID,PA.STATE_ID)
		AND PA.COUNTRY_ID=ISNULL(@COUNTRY_ID,PA.COUNTRY_ID)
		AND PA.ISBILLING = ISNULL(@ISBILLING,PA.ISBILLING)
		AND PA.ID = ISNULL(@ID,PA.ID)
End


USE [Total]
GO
/****** Object:  StoredProcedure [dbo].[usp_InsPartyAddress]    Script Date: 02/19/2018 21:31:06 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER procedure [dbo].[usp_InsPartyAddress](
	 @COMPANY_ID int = NULL
	,@ACCOUNT_ID int = NULL
	,@ADDRESS1 nvarchar(250) = NULL
	,@ADDRESS2 nvarchar(250) = NULL
	,@PINCODE nvarchar(10) = NULL
	,@DISTRICT_ID int = NULL
	,@STATE_ID int = NULL
	,@COUNTRY_ID int = NULL
	,@VenderCode int = NULL
	,@ISBILLING bit = NULL
	,@CREATEDBY nvarchar(50) = NULL
	,@MODIFIEDBY nvarchar(50) = NULL
	)
AS
Begin
	insert into PartyAddress (
	 [COMPANY_ID]
	,[ACCOUNT_ID]
	,[ADDRESS1]
	,[ADDRESS2]
	,[PINCODE]
	,[DISTRICT_ID]
	,[STATE_ID]
	,[COUNTRY_ID]
	,VenderCode
	,[ISBILLING]
	,[CREATEDBY]
	,[CREATEDON]
	,[MODIFIEDBY]
	,[MODIFIEDON]
	,[ISACTIVE])
	values(
	 @COMPANY_ID
	,@ACCOUNT_ID
	,@ADDRESS1
	,@ADDRESS2
	,@PINCODE
	,@DISTRICT_ID
	,@STATE_ID
	,@COUNTRY_ID
	,@VenderCode
	,@ISBILLING
	,@CREATEDBY
	,GETDATE()
	,@MODIFIEDBY
	,getdate()
	,1)
End

USE [Total]
GO
/****** Object:  StoredProcedure [dbo].[usp_UpdPartyAddress]    Script Date: 02/19/2018 21:31:42 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER procedure [dbo].[usp_UpdPartyAddress](
	@ID INT = NULL
	,@COMPANY_ID int = NULL
	,@ACCOUNT_ID int = NULL
	,@ADDRESS1 nvarchar(250) = NULL
	,@ADDRESS2 nvarchar(250) = NULL
	,@PINCODE nvarchar(10) = NULL
	,@DISTRICT_ID int = NULL
	,@STATE_ID int = NULL
	,@COUNTRY_ID int = NULL
	,@VenderCode int = NULL
	,@ISBILLING bit = NULL
	,@MODIFIEDBY nvarchar(50) = NULL
	,@ISACTIVE BIT = NULL
	)
AS
Begin
UPDATE PartyAddress SET
	 [ADDRESS1]=@ADDRESS1
	,[ADDRESS2]=@ADDRESS2
	,[PINCODE]=@PINCODE
	,[DISTRICT_ID]=@DISTRICT_ID
	,[STATE_ID]=@STATE_ID
	,[COUNTRY_ID]=@COUNTRY_ID
	,VenderCode=@VenderCode
	,[ISBILLING]=@ISBILLING
	,[MODIFIEDBY]=@MODIFIEDBY
	,[MODIFIEDON]=GETDATE()
	,[ISACTIVE]=@ISACTIVE
	WHERE
		COMPANY_ID =@COMPANY_ID
		AND ACCOUNT_ID=@ACCOUNT_ID
		AND ID=@ID
End

USE [Total]
GO
/****** Object:  StoredProcedure [dbo].[usp_InsPrinteddata]    Script Date: 02/19/2018 21:32:10 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER procedure [dbo].[usp_InsPrinteddata] (
		 @COMPANY_ID int = NULL
		,@FINANCIALYEAR_ID int = NULL
		,@VOUCHERTYPE nvarchar(3) = NULL
		,@PREFIX nvarchar(20) = NULL
		,@VOUCHER_ID int = NULL
		,@MACHINENAME nvarchar(50) = NULL
		,@CREATEDON datetime = NULL
		,@CREATEDBY nvarchar(50) = NULL

    )
    As
    /*Created BY - Sinish on 2017/10/29 */
Begin
    INSERT INTO [Printeddata] (
		 [COMPANY_ID]
		,[FINANCIALYEAR_ID]
		,[VOUCHERTYPE]
		,[PREFIX]
		,[VOUCHER_ID]
		,[MACHINENAME]
		,[CREATEDON]
		,[CREATEDBY]
        )
    VALUES (
		 @COMPANY_ID
		,@FINANCIALYEAR_ID
		,@VOUCHERTYPE
		,@PREFIX
		,@VOUCHER_ID
		,@MACHINENAME
		,GETDATE()
		,@CREATEDBY
    )
End


USE [Total]
GO
/****** Object:  StoredProcedure [dbo].[usp_DelSalesVoucher]    Script Date: 02/19/2018 21:33:14 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER PROCEDURE  [dbo].[usp_DelSalesVoucher] (
	 @COMPANY_ID int = NULL
	,@ISSALES bit = NULL
	,@FINANCIALYEAR_ID int = NULL
	,@PREFIX nvarchar(20) = NULL
	,@VOUCHER_ID int = NULL
	,@VOUCHERTYPE nvarchar(3) = NULL
	,@MODIFIEDBY nvarchar(50) = NULL
	,@MACHINENAME NVARCHAR(50)
	,@IPADDRESS VARCHAR(20)
  )  
As  

BEGIN  

    /*Created BY - Sinish on 2017/11/29 */  
IF NOT EXISTS(SELECT 1 FROM Printeddata WHERE COMPANY_ID=@COMPANY_ID AND FinancialYear_ID=@FINANCIALYEAR_ID AND VoucherType=@VOUCHERTYPE AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID)
BEGIN
    declare   
			@OPBALANCE decimal(15,2)   
			,@OLDACCOUNT_ID int = NULL
			,@OLDLEDGERACCOUNT_ID int = NULL
			,@OLDINVLEDGERAMOUNT DECIMAL(15,2)  
			,@INVLEDGERAMOUNT DECIMAL(15,2)  
			,@OLDCGSTAMOUNT DECIMAL(12,2) = NULL
			,@OLDSGSTAMOUNT DECIMAL(12,2) = NULL
			,@OLDIGSTAMOUNT DECIMAL(12,2) = NULL
			,@OLDGRANDTOTALAMOUNT DECIMAL(12,2) = NULL
			,@PURCHASEORDER_PREFIX NVARCHAR(20) = NULL
			,@PURCHASEORDER_ID INT = 0
			,@CGSTACCOUNT_ID INT 
			,@SGSTACCOUNT_ID INT
			,@IGSTACCOUNT_ID INT

		--SELECTING OLD VALUES TO PARAMETERS
		SELECT @CGSTACCOUNT_ID=ID FROM ACCOUNT WITH (NOLOCK) WHERE COMPANY_ID=@COMPANY_ID AND FinancialYear_ID=@FINANCIALYEAR_ID AND ACCOUNTDESC= 'OUTPUT CGST'
		SELECT @SGSTACCOUNT_ID=ID FROM ACCOUNT WITH (NOLOCK) WHERE COMPANY_ID=@COMPANY_ID AND FinancialYear_ID=@FINANCIALYEAR_ID AND ACCOUNTDESC= 'OUTPUT SGST'
		SELECT @IGSTACCOUNT_ID=ID FROM ACCOUNT WITH (NOLOCK) WHERE COMPANY_ID=@COMPANY_ID AND FinancialYear_ID=@FINANCIALYEAR_ID AND ACCOUNTDESC= 'OUTPUT IGST'
		SELECT 
			@OLDACCOUNT_ID=ACCOUNT_ID, @OLDLEDGERACCOUNT_ID=LEDGER_ID 
		FROM 
			INVOICETRAN  WITH (NOLOCK)
		WHERE 
			COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID
		--OLD GRAND TOTAL AMOUNT
		SELECT 
			@OLDGRANDTOTALAMOUNT= AMOUNT 
		FROM 
			AccountTran  WITH (NOLOCK)
		WHERE 
			DR_ACCOUNT_ID=@OLDACCOUNT_ID AND COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID
		--OLD Ledger AMOUNT
		SELECT 
			@OLDINVLEDGERAMOUNT= AMOUNT 
		FROM 
			AccountTran  WITH (NOLOCK)
		WHERE 
			CR_ACCOUNT_ID=@OLDLEDGERACCOUNT_ID AND COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID
		--OLD CGST AMOUNT
		SELECT 
			@OLDCGSTAMOUNT= AMOUNT 
		FROM 
			AccountTran  WITH (NOLOCK)
		WHERE 
			CR_ACCOUNT_ID=@CGSTACCOUNT_ID AND COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID
		--OLD SGST AMOUNT
		SELECT 
			@OLDSGSTAMOUNT= AMOUNT 
		FROM 
			AccountTran WITH (NOLOCK) 
		WHERE 
			CR_ACCOUNT_ID=@SGSTACCOUNT_ID AND COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID
		--OLD IGST AMOUNT
		SELECT 
			@OLDIGSTAMOUNT= AMOUNT 
		FROM 
			AccountTran WITH (NOLOCK)
		WHERE 
			CR_ACCOUNT_ID=@IGSTACCOUNT_ID AND COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID
		--OLD PURCHASEORDER_PREFIX AND PURCHASEORDER_ID
		SELECT @PURCHASEORDER_PREFIX=PURCHASEORDER_PREFIX, @PURCHASEORDER_ID=PURCHASEORDER_ID FROM InvoiceTran WITH (NOLOCK) WHERE COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID
	--REVERSE ENTRY BEFORE UPDATE	
		--UPDATE STOCK
	UPDATE I SET i.stock = i.stock+IT.QUANTITY, i.SALES = i.SALES-IT.QUANTITY
	from item I 
	INNER JOIN InvoiceTran IT WITH (NOLOCK)
		ON i.id = IT.item_ID and IT.voucher_id=@VOUCHER_ID and IT.prefix=@prefix AND IT.COMPANY_ID=@COMPANY_ID AND IT.FINANCIALYEAR_ID=@FINANCIALYEAR_ID

	if @PURCHASEORDER_PREFIX IS NOT NULL AND @PURCHASEORDER_ID IS NOT NULL
		BEGIN
			UPDATE Ord SET ORD.VOUCHERQTY = ORD.VOUCHERQTY-IT.QUANTITY
			from  Orders ORD 
			INNER JOIN InvoiceTran IT WITH (NOLOCK)
				ON ORD.COMPANY_ID=IT.COMPANY_ID AND ORD.FINANCIALYEAR_ID=IT.FINANCIALYEAR_ID AND ORD.ITEM_ID = IT.item_ID and IT.voucher_id=@VOUCHER_ID and IT.prefix=@prefix
			WHERE ORD.COMPANY_ID=@COMPANY_ID AND ORD.FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND ORD.PREFIX=@PURCHASEORDER_PREFIX AND ORD.VOUCHER_ID=@PURCHASEORDER_ID
		END


	-- DELETE OLD RECORDS FROM  INVOICETRAN
		UPDATE InvoiceTran 
			SET QUANTITY=0
			,AMOUNT=0
			,DISCOUNT=0
			,CGSTPERCENT=0
			,SGSTPERCENT=0
			,IGSTPERCENT=0
			,VATPERCENT=0
			,CGSTAMOUNT=0
			,SGSTAMOUNT=0
			,IGSTAMOUNT=0
			,VATAMOUNT=0
			,MODEOFTRANSPORT='DELETED'
			,VEHICLEREGNO='DELETED'
			,CREATEDON=GETDATE()
			,CREATEDBY=@IPADDRESS
			,ISACTIVE=0
		where COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID

	-- DELETE OLD RECORDS FROM ACCOUNTTRAN*/
		UPDATE AccountTran 
			SET AMOUNT=0
			,NARRATION='DELETED BY ' +@MODIFIEDBY + ' FROM ' + ISNULL(@MACHINENAME,'') + ' ON ' + CAST(GETDATE() AS NVARCHAR(25))
			,ISACTIVE=0
		where COMPANY_ID=@COMPANY_ID AND FINANCIALYEAR_ID=@FINANCIALYEAR_ID AND PREFIX=@PREFIX AND VOUCHER_ID=@VOUCHER_ID
		    
		SET @OLDINVLEDGERAMOUNT = @OLDGRANDTOTALAMOUNT-(@OLDSGSTAMOUNT + @OLDCGSTAMOUNT + @OLDIGSTAMOUNT)  
		--ACCOUNT ID
		UPDATE Account with (rowlock) 
			SET DEBITS = DEBITS - @OLDGRANDTOTALAMOUNT,CURRENTBALANCE=CURRENTBALANCE-@OLDGRANDTOTALAMOUNT 
		WHERE COMPANY_ID = @Company_ID 
			and ID = @OLDACCOUNT_ID 
			and FINANCIALYEAR_ID=@FINANCIALYEAR_ID
		--LEDGER ACCOUNT
	    UPDATE Account with (rowlock) 
			SET  CREDITS=CREDITS - @OLDINVLEDGERAMOUNT 
		WHERE COMPANY_ID = @Company_ID 
			and ID=@OLDLEDGERACCOUNT_ID 
			and FINANCIALYEAR_ID=@FINANCIALYEAR_ID
		--IGST AMOUNT
        update Account with (rowlock) 
            set CREDITS=CREDITS-ISNULL(@OLDIGSTAMOUNT,0) 
        where COMPANY_ID =@Company_ID 
            and ID=@IGSTACCOUNT_ID 
            and FINANCIALYEAR_ID=@FINANCIALYEAR_ID
        --SGST AMOUNT UPDATE
        update Account with (rowlock) 
            set CREDITS=CREDITS-ISNULL(@OLDSGSTAMOUNT,0)
        where COMPANY_ID =@Company_ID 
            and ID=@SGSTACCOUNT_ID 
            and FINANCIALYEAR_ID=@FINANCIALYEAR_ID
        --SGST AMOUNT UPDATE
        update Account with (rowlock) 
            set CREDITS=CREDITS-@OLDCGSTAMOUNT 
            where COMPANY_ID =@Company_ID 
            and ID=@CGSTACCOUNT_ID 
            and FINANCIALYEAR_ID=@FINANCIALYEAR_ID

END
END  


USE [Total]
GO
/****** Object:  StoredProcedure [dbo].[usp_GetState]    Script Date: 02/19/2018 21:33:49 ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO

ALTER procedure [dbo].[usp_GetState] (
	@ID	smallint
	,@COUNTRY_ID tinyint
    )
    As
    /*Created BY - Sinish on 2017/10/30 
	0= all states else one state*/
Begin
	Select 
		 [ID]
		,[COUNTRY_ID]
		,[NAME]
		,[CODE]
		,[STATETINPREFIX]
	From [state]
	where ID=isnull(@ID,ID) and COUNTRY_ID=isnull(@COUNTRY_ID,COUNTRY_ID)
end

USE [Total]
GO

/****** Object:  StoredProcedure [dbo].[usp_GetGRNOrders]    Script Date: 02/19/2018 21:35:12 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

  
CREATE procedure [dbo].[usp_GetGRNOrders] (  
 @COMPANY_ID int   
 ,@FINANCIALYEAR_ID tinyint  
 ,@ISSALESORDER BIT  
 ,@ACCOUNTID INT  
    )  
    As  
    /*Created BY - Sinish on 2017/11/28   
 0= all states else one state*/  
 
BEGIN  
 SELECT   
  DISTINCT O.PREFIX, O.VOUCHER_ID, O.[DATE],REPLICATE('0',6-LEN(RTRIM(O.VOUCHER_ID))) + RTRIM(O.VOUCHER_ID) as id  
 FROM   
  ORDERS  O with (nolock)   
  WHERE O.COMPANY_ID=@COMPANY_ID   
   AND O.[FINANCIALYEAR_ID]=@FINANCIALYEAR_ID  
   AND O.[ISSALESORDER]=@ISSALESORDER  
   AND O.ACCOUNT_ID=@ACCOUNTID  
   AND O.[ISACTIVE]=1  
   AND O.[QTY]-isnull(O.[VOUCHERQTY],0)>0  
END  
 


GO


